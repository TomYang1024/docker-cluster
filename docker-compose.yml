version: '3.7'

networks:
  redis-cluster-net:
    external:
      name: redis-cluster-net
  kafka:
    external:
      name: kafka
  backend:
    driver: ${NETWORKS_DRIVER}

services:
  zoo1:
    image: wurstmeister/zookeeper
    restart: always
    hostname: zoo1
    container_name: zoo1
    ports:
      - 2184:2181
    volumes:
      - ${DATA_PATH_HOST}/zoo1/data:/data
      - ${DATA_PATH_HOST}/zoo1/datalog:/datalog
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    networks:
      kafka:
        ipv4_address: 172.30.0.11

  zoo2:
    image: wurstmeister/zookeeper
    restart: always
    hostname: zoo2
    container_name: zoo2
    ports:
      - 2185:2181
    volumes:
      - ${DATA_PATH_HOST}/zoo2/data:/data
      - ${DATA_PATH_HOST}/zoo2/datalog:/datalog"
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=0.0.0.0:2888:3888 server.3=zoo3:2888:3888
    networks:
      kafka:
        ipv4_address: 172.30.0.12

  zoo3:
    image: wurstmeister/zookeeper
    restart: always
    hostname: zoo3
    container_name: zoo3
    ports:
      - 2186:2181
    volumes:
      - ${DATA_PATH_HOST}/zoo3/data:/data
      - ${DATA_PATH_HOST}/zoo3/datalog:/datalog
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=0.0.0.0:2888:3888
    networks:
      kafka:
        ipv4_address: 172.30.0.13

  kafka1:
    image: wurstmeister/kafka
    restart: always
    hostname: kafka1
    container_name: kafka1
    privileged: true
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka1
      KAFKA_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
    volumes:
      - ${DATA_PATH_HOST}/kafka1/logs:/kafka
    networks:
      kafka:
        ipv4_address: 172.30.1.11
    extra_hosts:
      - zoo1:172.30.0.11
      - zoo2:172.30.0.12
      - zoo3:172.30.0.13
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    external_links:
      - zoo1
      - zoo2
      - zoo3

  kafka2:
    image: wurstmeister/kafka
    restart: always
    hostname: kafka2
    container_name: kafka2
    privileged: true
    ports:
      - 9093:9093
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka2
      KAFKA_LISTENERS: PLAINTEXT://kafka2:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093
      KAFKA_ADVERTISED_PORT: 9093
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
    volumes:
      - ${DATA_PATH_HOST}/kafka2/logs:/kafka
    networks:
      kafka:
        ipv4_address: 172.30.1.12
    extra_hosts:
      - zoo1:172.30.0.11
      - zoo2:172.30.0.12
      - zoo3:172.30.0.13
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    external_links:
      - zoo1
      - zoo2
      - zoo3

  kafka3:
    image: wurstmeister/kafka
    restart: always
    hostname: kafka3
    container_name: kafka3
    privileged: true
    ports:
      - 9094:9094
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka3
      KAFKA_LISTENERS: PLAINTEXT://kafka3:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9094
      KAFKA_ADVERTISED_PORT: 9094
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
    volumes:
      - ${DATA_PATH_HOST}/kafka3/logs:/kafka
    networks:
      kafka:
        ipv4_address: 172.30.1.13
    extra_hosts:
      - zoo1:172.30.0.11
      - zoo2:172.30.0.12
      - zoo3:172.30.0.13
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    external_links:
      - zoo1
      - zoo2
      - zoo3
  mysql:
    container_name: mysql
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${WORKSPACE_TIMEZONE}
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend
#  redis:
#    container_name: redis
#    build: ./redis
#    volumes:
#      - ${DATA_PATH_HOST}/redis:/data
#    ports:
#      - "${REDIS_PORT}:6379"
#    networks:
#      - backend
  beanstalkd:
    build: ./beanstalkd
    container_name: beanstalk
    ports:
      - "${BEANSTALKD_HOST_PORT}:11300"
    privileged: true
    networks:
      - backend
  rabbitmq:
    build: ./rabbitmq
    container_name: rabbitmq
    ports:
      - "${RABBITMQ_NODE_HOST_PORT}:5672"
      - "${RABBITMQ_MANAGEMENT_HTTP_HOST_PORT}:15672"
      - "${RABBITMQ_MANAGEMENT_HTTPS_HOST_PORT}:15671"
    privileged: true
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    hostname: laradock-rabbitmq
    volumes:
      - ${DATA_PATH_HOST}/rabbitmq:/var/lib/rabbitmq
    networks:
      - backend
  redis-master-1:
    image: redis:5.0.7
    container_name: redis-master-1
    command:
      ["redis-server", "/home/redis/cluster/redis.conf"]
    networks:
        redis-cluster-net:
            ipv4_address: 192.168.200.11
    volumes:
      - /Users/yanghao/works/docker/docker-cluster/redis-cluster/master/redis1.conf:/home/redis/cluster/redis.conf
    ports:
      - 7001:7001
      - 17001:17001
  redis-master-2:
    image: redis:5.0.7
    container_name: redis-master-2
    command:
      ["redis-server", "/home/redis/cluster/redis.conf"]
    networks:
      redis-cluster-net:
        ipv4_address: 192.168.200.12
    volumes:
      - /Users/yanghao/works/docker/docker-cluster/redis-cluster/master/redis2.conf:/home/redis/cluster/redis.conf
    ports:
      - 7002:7002
      - 17002:17002
  redis-master-3:
    image: redis:5.0.7
    container_name: redis-master-3
    command:
      [ "redis-server", "/home/redis/cluster/redis.conf" ]
    networks:
      redis-cluster-net:
        ipv4_address: 192.168.200.13
    volumes:
      - /Users/yanghao/works/docker/docker-cluster/redis-cluster/master/redis3.conf:/home/redis/cluster/redis.conf
    ports:
      - 7003:7003
      - 17003:17003
  redis-salve-1:
    image: redis:5.0.7
    container_name: redis-salve-1
    command:
      [ "redis-server", "/home/redis/cluster/redis.conf" ]
    networks:
      redis-cluster-net:
        ipv4_address: 192.168.200.14
    volumes:
      - /Users/yanghao/works/docker/docker-cluster/redis-cluster/salve/redis1.conf:/home/redis/cluster/redis.conf
    ports:
      - 7004:7004
      - 17004:17004
  redis-salve-2:
    image: redis:5.0.7
    container_name: redis-salve-2
    command:
      [ "redis-server", "/home/redis/cluster/redis.conf" ]
    networks:
      redis-cluster-net:
        ipv4_address: 192.168.200.15
    volumes:
      - /Users/yanghao/works/docker/docker-cluster/redis-cluster/salve/redis2.conf:/home/redis/cluster/redis.conf
    ports:
      - 7005:7005
      - 17005:17005
  redis-salve-3:
    image: redis:5.0.7
    container_name: redis-salve-3
    command:
      [ "redis-server", "/home/redis/cluster/redis.conf" ]
    networks:
      redis-cluster-net:
        ipv4_address: 192.168.200.16
    volumes:
      - /Users/yanghao/works/docker/docker-cluster/redis-cluster/salve/redis3.conf:/home/redis/cluster/redis.conf
    ports:
      - 7006:7006
      - 17006:17006
